{
   "compilerOptions": {
        "module": "NodeNext",
        "moduleResolution": "node16",
        "moduleDetection": "force",
        "target": "es2021", // Node.js 16
        "lib": [
            "DOM",
            "DOM.Iterable",
            "ES2021"
        ],
        "types": [
            "node",
            "jest",
            "multer",
            "vite/client"
        ],
        "allowSyntheticDefaultImports": true, // To provide backwards compatibility, Node.js allows you to import most CommonJS packages with a default import. This flag tells TypeScript that it's okay to use import on CommonJS modules.
        "resolveJsonModule": true, // ESM doesn't yet support JSON modules.
        "jsx": "react",
        "declaration": true,
        "pretty": true,
        "newLine": "lf",
        "stripInternal": true,
        "strict": true,
        "emitDecoratorMetadata": true,
        "noUnusedParameters": true,
        "noFallthroughCasesInSwitch": true,
        "noUncheckedIndexedAccess": true,
        "useDefineForClassFields": true,
        "forceConsistentCasingInFileNames": true,
        "skipLibCheck": true,
        "experimentalDecorators": true,
        "strictPropertyInitialization": false, // todo fix these issues so we can have this on
        "strictNullChecks":false, // todo fix these issues so we can have this on
        "noImplicitAny": false, // todo fix these issues so we can have this on
        "noImplicitReturns": false, // todo fix these issues so we can have this on
        "noPropertyAccessFromIndexSignature": false, // todo fix these issues so we can have this on
        "noUnusedLocals": false, // todo fix these issues so we can have this on
        "noImplicitOverride": false, // todo fix these issues so we can have this on
   },
    "exclude": [
        "**/node_modules",
        "**/dist",
    ]
}
